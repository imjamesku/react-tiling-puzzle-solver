{"version":3,"sources":["solver/boards/checkerboard","solver/boards/IQ_creator","solver/boards/lucky13","solver/boards/new","solver/boards/pentominoes3x20","solver/boards/pentominoes4x15","solver/boards/pentominoes5x12","solver/boards/pentominoes6x10","solver/boards/pentominoes8x8_middle_missing","solver/boards/test1","solver/boards/test2","solver/boards/thirteen_holes","solver/boards/trivial","solver/boards/trivial2","solver/colors.js","solver/solver.js","components/fileReader/ImportFromFileBodyComponent.js","components/solver/square/Square.jsx","components/layout/Spinner/Spinner.jsx","components/solver/Solver.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","colors","Piece","char","this","data","size","symmetry","available","reflect","y","x","dy","dx","layout","push","buildPiece","xLow","xHigh","yLow","yHigh","sq","Math","min","max","testSym","a","sym","forEach","tryPiece","testRef","buildIsland","aboard","seen","i","iJson","JSON","stringify","has","add","sizeCheck","bag","boardSize","totalSize","piece","console","log","arraysEqual","arr1","arr2","length","arrayContains","arr","elementArr","some","e","orientation","reflection","block","j","mult","boardFirstSolve","bfirst","solutions","sameSize","alert","curState","shift","abag","aused","aboards","sort","b","pf","pieceFit","config","center","ori","ref","tempBoards","slice","changeBoard2","Set","islands","yoff","xoff","splits","tempUsed","newy","newx","tempBag","idx","indexOf","splice","unshift","configs","tryPiece2","indexOfArray","bboard","cboard","parse","getLayoutFromLines","lines","width","line","getWidth","repeat","split","getBoard","name","boards","checkerboard","IQ_creator","lucky13","new_board","pentominoes3x20","pentominoes4x15","pentominoes5x12","pentominoes6x10","pentominoes8x8_middle_missing","test1","test2","thirteen_holes","trivial","trivial2","fetch","res","text","board","solutionToGrid","solution","height","grid","square","ImportFromFileBodyComponent","fileReader","setInput","handleFileRead","content","result","className","Button","variant","component","type","id","style","display","onChange","file","target","files","FileReader","onloadend","readAsText","Square","color","backgroundColor","Spinner","class","Solver","useState","input","setSolutions","setGrid","solving","setSolving","loadDefaultBoards","Container","maxWidth","paddingBottom","map","Box","m","clone","onClick","marginTop","s","allowReflections","replace","used","getHeightWith","solve","String","row","rowIdx","squareIdx","App","AppBar","position","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.572c53fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkerboard.80b50699.bin\";","module.exports = __webpack_public_path__ + \"static/media/IQ_creator.f4d7e2cc.bin\";","module.exports = __webpack_public_path__ + \"static/media/lucky13.65780082.bin\";","module.exports = __webpack_public_path__ + \"static/media/new.b8406fef.bin\";","module.exports = __webpack_public_path__ + \"static/media/pentominoes3x20.3d95faec.bin\";","module.exports = __webpack_public_path__ + \"static/media/pentominoes4x15.5a7fe648.bin\";","module.exports = __webpack_public_path__ + \"static/media/pentominoes5x12.365b0a88.bin\";","module.exports = __webpack_public_path__ + \"static/media/pentominoes6x10.368f41dc.bin\";","module.exports = __webpack_public_path__ + \"static/media/pentominoes8x8_middle_missing.ed2af10e.bin\";","module.exports = __webpack_public_path__ + \"static/media/test1.6f90874e.bin\";","module.exports = __webpack_public_path__ + \"static/media/test2.113c1996.bin\";","module.exports = __webpack_public_path__ + \"static/media/thirteen_holes.104c44bf.bin\";","module.exports = __webpack_public_path__ + \"static/media/trivial.08a061df.bin\";","module.exports = __webpack_public_path__ + \"static/media/trivial2.df61a3b0.bin\";","export const colors = [\r\n    \"#63b598\", \"#ce7d78\", \"#ea9e70\", \"#a48a9e\", \"#c6e1e8\", \"#648177\", \"#0d5ac1\",\r\n    \"#f205e6\", \"#1c0365\", \"#14a9ad\", \"#4ca2f9\", \"#a4e43f\", \"#d298e2\", \"#6119d0\",\r\n    \"#d2737d\", \"#c0a43c\", \"#f2510e\", \"#651be6\", \"#79806e\", \"#61da5e\", \"#cd2f00\",\r\n    \"#9348af\", \"#01ac53\", \"#c5a4fb\", \"#996635\", \"#b11573\", \"#4bb473\", \"#75d89e\",\r\n    \"#2f3f94\", \"#2f7b99\", \"#da967d\", \"#34891f\", \"#b0d87b\", \"#ca4751\", \"#7e50a8\",\r\n    \"#c4d647\", \"#e0eeb8\", \"#11dec1\", \"#289812\", \"#566ca0\", \"#ffdbe1\", \"#2f1179\",\r\n    \"#935b6d\", \"#916988\", \"#513d98\", \"#aead3a\", \"#9e6d71\", \"#4b5bdc\", \"#0cd36d\",\r\n    \"#250662\", \"#cb5bea\", \"#228916\", \"#ac3e1b\", \"#df514a\", \"#539397\", \"#880977\",\r\n    \"#f697c1\", \"#ba96ce\", \"#679c9d\", \"#c6c42c\", \"#5d2c52\", \"#48b41b\", \"#e1cf3b\",\r\n    \"#5be4f0\", \"#57c4d8\", \"#a4d17a\", \"#225b8\", \"#be608b\", \"#96b00c\", \"#088baf\",\r\n    \"#f158bf\", \"#e145ba\", \"#ee91e3\", \"#05d371\", \"#5426e0\", \"#4834d0\", \"#802234\",\r\n    \"#6749e8\", \"#0971f0\", \"#8fb413\", \"#b2b4f0\", \"#c3c89d\", \"#c9a941\", \"#41d158\",\r\n    \"#fb21a3\", \"#51aed9\", \"#5bb32d\", \"#807fb\", \"#21538e\", \"#89d534\", \"#d36647\",\r\n    \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\r\n    \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\r\n    \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#21538e\", \"#89d534\", \"#d36647\",\r\n    \"#7fb411\", \"#0023b8\", \"#3b8c2a\", \"#986b53\", \"#f50422\", \"#983f7a\", \"#ea24a3\",\r\n    \"#79352c\", \"#521250\", \"#c79ed2\", \"#d6dd92\", \"#e33e52\", \"#b2be57\", \"#fa06ec\",\r\n    \"#1bb699\", \"#6b2e5f\", \"#64820f\", \"#1c271\", \"#9cb64a\", \"#996c48\", \"#9ab9b7\",\r\n    \"#06e052\", \"#e3a481\", \"#0eb621\", \"#fc458e\", \"#b2db15\", \"#aa226d\", \"#792ed8\",\r\n    \"#73872a\", \"#520d3a\", \"#cefcb8\", \"#a5b3d9\", \"#7d1d85\", \"#c4fd57\", \"#f1ae16\",\r\n    \"#8fe22a\", \"#ef6e3c\", \"#243eeb\", \"#1dc18\", \"#dd93fd\", \"#3f8473\", \"#e7dbce\",\r\n    \"#421f79\", \"#7a3d93\", \"#635f6d\", \"#93f2d7\", \"#9b5c2a\", \"#15b9ee\", \"#0f5997\",\r\n    \"#409188\", \"#911e20\", \"#1350ce\", \"#10e5b1\", \"#fff4d7\", \"#cb2582\", \"#ce00be\",\r\n    \"#32d5d6\", \"#17232\", \"#608572\", \"#c79bc2\", \"#00f87c\", \"#77772a\", \"#6995ba\",\r\n    \"#fc6b57\", \"#f07815\", \"#8fd883\", \"#060e27\", \"#96e591\", \"#21d52e\", \"#d00043\",\r\n    \"#b47162\", \"#1ec227\", \"#4f0f6f\", \"#1d1d58\", \"#947002\", \"#bde052\", \"#e08c56\",\r\n    \"#28fcfd\", \"#bb09b\", \"#36486a\", \"#d02e29\", \"#1ae6db\", \"#3e464c\", \"#a84a8f\",\r\n    \"#911e7e\", \"#3f16d9\", \"#0f525f\", \"#ac7c0a\", \"#b4c086\", \"#c9d730\", \"#30cc49\",\r\n    \"#3d6751\", \"#fb4c03\", \"#640fc1\", \"#62c03e\", \"#d3493a\", \"#88aa0b\", \"#406df9\",\r\n    \"#615af0\", \"#4be47\", \"#2a3434\", \"#4a543f\", \"#79bca0\", \"#a8b8d4\", \"#00efd4\",\r\n    \"#7ad236\", \"#7260d8\", \"#1deaa7\", \"#06f43a\", \"#823c59\", \"#e3d94c\", \"#dc1c06\",\r\n    \"#f53b2a\", \"#b46238\", \"#2dfff6\", \"#a82b89\", \"#1a8011\", \"#436a9f\", \"#1a806a\",\r\n    \"#4cf09d\", \"#c188a2\", \"#67eb4b\", \"#b308d3\", \"#fc7e41\", \"#af3101\", \"#ff065\",\r\n    \"#71b1f4\", \"#a2f8a5\", \"#e23dd0\", \"#d3486d\", \"#00f7f9\", \"#474893\", \"#3cec35\",\r\n    \"#1c65cb\", \"#5d1d0c\", \"#2d7d2a\", \"#ff3420\", \"#5cdd87\", \"#a259a4\", \"#e4ac44\",\r\n    \"#1bede6\", \"#8798a4\", \"#d7790f\", \"#b2c24f\", \"#de73c2\", \"#d70a9c\", \"#25b67\",\r\n    \"#88e9b8\", \"#c2b0e2\", \"#86e98f\", \"#ae90e2\", \"#1a806b\", \"#436a9e\", \"#0ec0ff\",\r\n    \"#f812b3\", \"#b17fc9\", \"#8d6c2f\", \"#d3277a\", \"#2ca1ae\", \"#9685eb\", \"#8a96c6\",\r\n    \"#dba2e6\", \"#76fc1b\", \"#608fa4\", \"#20f6ba\", \"#07d7f6\", \"#dce77a\", \"#77ecca\"]","import checkerboard from './boards/checkerboard'\nimport IQ_creator from './boards/IQ_creator'\nimport lucky13 from './boards/lucky13'\nimport new_board from './boards/new'\nimport pentominoes3x20 from './boards/pentominoes3x20'\nimport pentominoes4x15 from './boards/pentominoes4x15'\nimport pentominoes5x12 from './boards/pentominoes5x12'\nimport pentominoes6x10 from './boards/pentominoes6x10'\nimport pentominoes8x8_middle_missing from './boards/pentominoes8x8_middle_missing'\nimport test1 from './boards/test1'\nimport test2 from './boards/test2'\nimport thirteen_holes from './boards/thirteen_holes'\nimport trivial from './boards/trivial'\nimport trivial2 from './boards/trivial2'\nimport { colors } from './colors'\n\nclass Piece {\n    constructor(char) {\n        this.data = [[0, 0, char]]\n        this.size = 1\n        this.symmetry = 4\n        this.available = []\n        this.reflect = 1\n    }\n\n    buildPiece(y, x, dy, dx, layout) {\n        layout[y][x] = \" \"\n        if (layout[y - 1][x] != \" \") {\n            this.data.push([dy - 1, dx, layout[y - 1][x]])\n            this.size++\n            this.buildPiece(y - 1, x, dy - 1, dx, layout)\n        }\n        if (layout[y + 1][x] != \" \") {\n            this.data.push([dy + 1, dx, layout[y + 1][x]])\n            this.size++\n            this.buildPiece(y + 1, x, dy + 1, dx, layout)\n        }\n        if (layout[y][x - 1] != \" \") {\n            this.data.push([dy, dx - 1, layout[y][x - 1]])\n            this.size++\n            this.buildPiece(y, x - 1, dy, dx - 1, layout)\n        }\n        if (layout[y][x + 1] != \" \") {\n            this.data.push([dy, dx + 1, layout[y][x + 1]])\n            this.size++\n            this.buildPiece(y, x + 1, dy, dx + 1, layout)\n        }\n    }\n\n    getHeightWith() {\n        let xLow = 0, xHigh = 0, yLow = 0, yHigh = 0\n        for (const sq of this.data) {\n            const [y, x, _] = sq\n            yLow = Math.min(yLow, y)\n            yHigh = Math.max(yHigh, y)\n            xLow = Math.min(xLow, x)\n            xHigh = Math.min(xHigh, x)\n        }\n        return [yHigh - yLow + 1, xHigh - xLow + 1]\n    }\n}\n\n//#test rotational symmetry of a piece\nconst testSym = (a) => {\n    let sym = 4\n    a.data.forEach(sq => {\n        if (tryPiece(a, sq[0], sq[1], 1, 0, a)) { // a = i * a\n            sym = Math.min(sym, 1)\n        }\n        if (tryPiece(a, sq[0], sq[1], 2, 0, a)) { // a = -a\n            sym = Math.min(sym, 2)\n        }\n    })\n    return sym\n}\n\n//#test reflective symmetry of a piece\nconst testRef = (a) => {\n    let ref = 2\n    for (const sq of a.data) {\n        if (tryPiece(a, sq[0], sq[1], 0, 1, a)) {\n            return 1\n        }\n        if (tryPiece(a, sq[0], sq[1], 1, 1, a)) {\n            return 1\n        }\n        if (tryPiece(a, sq[0], sq[1], 2, 1, a)) {\n            return 1\n        }\n        if (tryPiece(a, sq[0], sq[1], 3, 1, a)) {\n            return 1\n        }\n    }\n    return ref\n}\n\nconst splits = (aboard) => {\n    const seen = new Set([])\n    const islands = []\n    aboard.data.forEach(i => {\n        const iJson = JSON.stringify(i)\n        if (!seen.has(iJson)) {\n            const a = new Piece(i[2])\n            a.data = [i]\n            const yoff = i[0]\n            const xoff = i[1]\n            seen.add(iJson)\n            buildIsland(aboard, a, yoff, xoff, 0, 0, seen)\n            islands.push(a)\n        }\n    });\n    return islands\n}\n\n\n//called by splits(). return all the blocks connected to a given piece\nconst buildIsland = (aboard, a, y, x, dy, dx, seen) => {\n    aboard.data.forEach(i => {\n        const iJson = JSON.stringify(i)\n        if (!seen.has(iJson)) {\n            if (i[0] == y + dy && i[1] == x + dx + 1) {\n                a.data.push(i)\n                a.size += 1\n                seen.add(iJson)\n                buildIsland(aboard, a, y, x, dy, dx + 1, seen)\n            }\n\n            if (i[0] == y + dy && i[1] == x + dx - 1) {\n                a.data.push(i)\n                a.size += 1\n                seen.add(iJson)\n                buildIsland(aboard, a, y, x, dy, dx - 1, seen)\n            }\n            if (i[0] == y + dy + 1 && i[1] == x + dx) {\n                a.data.push(i)\n                a.size += 1\n                seen.add(iJson)\n                buildIsland(aboard, a, y, x, dy + 1, dx, seen)\n            }\n            if (i[0] == y + dy - 1 && i[1] == x + dx) {\n                a.data.push(i)\n                a.size += 1\n                seen.add(iJson)\n                buildIsland(aboard, a, y, x, dy - 1, dx, seen)\n            }\n        }\n    });\n}\n\n// make sure there are enough pieces to fill up the entire board\nconst sizeCheck = (bag, boardSize) => {\n    let totalSize = 0\n    bag.forEach(piece => {\n        totalSize += piece.size\n    })\n    if (totalSize >= boardSize) {\n        console.log(\"Valid puzzle so far\")\n        // alert(\"Valid puzzle so far\")\n    } else {\n        console.log(\"Stop right there. Not enough pieces to cover board\")\n        // alert(\"Stop right there. Not enough pieces to cover board\")\n    }\n}\n\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) {\n        return false\n    }\n    for (var i = arr1.length; i--;) {\n        if (arr1[i] !== arr2[i]) {\n            return false\n        }\n    }\n    return true\n}\n\nconst arrayContains = (arr, elementArr) => {\n    const ret = arr.some(e => {\n        return arraysEqual(e, elementArr)\n    })\n    return ret\n}\n\n// attempt to place piece a in aboard with location dy,dx with orientation and reflection\n// returns boolean value\nconst tryPiece = (piece, dy, dx, orientation, reflection, aboard) => {\n    for (const block of piece.data) {\n        const [i, j, char] = block\n        const mult = 1 - 2 * reflection\n        if (orientation == 0) { // as is\n            if (!arrayContains(aboard.data, [i + dy, mult * j + dx, char])) {\n                return false\n            }\n        } else if (orientation == 1) { //90 degrees counterclockwise\n            if (!arrayContains(aboard.data, [-mult * j + dy, i + dx, char])) {\n                return false\n            }\n        } else if (orientation == 2) { //180 degree rotation\n            if (!arrayContains(aboard.data, [-i + dy, -mult * j + dx, char])) {\n                return false\n            }\n        } else if (orientation == 3) { // 270 degree counterclockwise\n            if (!arrayContains(aboard.data, [mult * j + dy, -i + dx, char])) {\n                return false\n            }\n        }\n    }\n    return true\n}\n\n// one step in solving the puzzle. take the first available square and try all the pieces in it\n\nconst boardFirstSolve = (bfirst, solutions, sameSize) => {\n    if (bfirst.length == 0) {\n        alert(\"Hmmm...\")\n        console.log(\"Hmmm...\")\n        return\n    }\n    const curState = bfirst.shift()\n    const [abag, aused, aboards] = curState\n    if (aboards.length == 0) {\n        console.log(\"solved\")\n        solutions.push(aused)\n        console.log(solutions)\n        return\n    }\n    aboards.sort((a, b) => a.size - b.size) //start with smallest remaining board\n    const aboard = aboards[0]\n\n    if (sameSize) {\n        //we can eliminate possibilities all pieces are same size, and that size does not divide the size of an island\n        if (aboard.size % sameSize != 0) {\n            return\n        }\n    }\n    const sq = aboard.data[0]\n    const pf = pieceFit(aboard, abag, sq[0], sq[1])\n    for (const config of pf) {\n        const [piece, center, ori, ref] = config\n        const tempBoards = aboards.slice()\n        tempBoards[0] = changeBoard2(piece, sq[0], sq[1], center, ori, ref, aboard)\n        if (tempBoards[0].size == 0) {\n            tempBoards.shift()\n        } else {\n            splits(tempBoards.shift()).forEach(i => {\n                tempBoards.push(i)\n            })\n        }\n        const tempUsed = aused.slice()\n        let newy, newx\n        if (ori == 0) {\n            newy = sq[0] - center[0]\n            newx = sq[1] - center[1]\n        }\n        if (ori == 1) {\n            newy = sq[0] + center[1]\n            newx = sq[1] - center[0]\n        }\n        if (ori == 2) {\n            newy = sq[0] + center[0]\n            newx = sq[1] + center[1]\n        }\n        if (ori == 3) {\n            newy = sq[0] - center[1]\n            newx = sq[1] + center[0]\n        }\n        tempUsed.push([piece, newy, newx, ori, ref])\n        const tempBag = abag.slice()\n        const idx = tempBag.indexOf(piece)\n        tempBag.splice(idx, 1)\n        bfirst.unshift([tempBag, tempUsed, tempBoards])\n    }\n}\n\n//return all of the pieces that can fit a given square\nconst pieceFit = (aboard, abag, y, x) => {\n    const configs = []\n    abag.forEach(a => {\n        a.data.forEach(block => {\n            for (let ori = 0; ori < a.symmetry; ++ori) {\n                for (let ref = 0; ref < a.reflect; ++ref) {\n                    if (tryPiece2(a, y, x, block, ori, ref, aboard)) {\n                        // console.log(configs.length)\n                        // console.log(a, block, ori, ref)\n                        configs.push([a, block, ori, ref])\n                    }\n                }\n            }\n        });\n    })\n    return configs\n}\n\n//more general version of trypiece that adjusts for a board that doesnt contain 0,0\n// y, x->coords on board\nconst tryPiece2 = (a, y, x, center, ori, ref, aboard) => {\n    if (ori === 0) {\n        const ret = tryPiece(a, y - center[0], x - center[1], ori, ref, aboard)\n        // console.log(`ret: ${ret}`)\n        return ret\n    } else if (ori === 1) {\n        return tryPiece(a, y + center[1], x - center[0], ori, ref, aboard)\n    } else if (ori === 2) {\n        return tryPiece(a, y + center[0], x + center[1], ori, ref, aboard)\n    } else if (ori === 3) {\n        return tryPiece(a, y - center[1], x + center[0], ori, ref, aboard)\n    }\n}\n\nconst indexOfArray = (arr, elementArr) => {\n    for (let i = 0; i < arr.length; ++i) {\n        if (arraysEqual(arr[i], elementArr)) {\n            return i\n        }\n    }\n    return undefined\n}\n\n// remove a piece a from the board\nconst changeBoard2 = (a, dy, dx, center, orientation, reflection, bboard) => {\n    //only call this if its been tested with trypiece first!!!\n    const cboard = JSON.parse(JSON.stringify(bboard))\n    a.data.forEach(i => {\n        const mult = 1 - 2 * reflection\n        cboard.size--\n        if (orientation == 0) {//as is\n            const idx = indexOfArray(cboard.data, [i[0] - center[0] + dy, mult * i[1] - center[1] + dx, i[2]])\n            cboard.data.splice(idx, 1)\n        } else if (orientation == 1) { // 90 degrees counterclockwise\n            const idx = indexOfArray(cboard.data, [-mult * i[1] + center[1] + dy, i[0] - center[0] + dx, i[2]])\n            cboard.data.splice(idx, 1)\n        } else if (orientation == 2) {\n            const idx = indexOfArray(cboard.data, [-i[0] + center[0] + dy, -mult * i[1] + center[1] + dx, i[2]])\n            cboard.data.splice(idx, 1)\n        } else if (orientation == 3) {\n            const idx = indexOfArray(cboard.data, [mult * i[1] - center[1] + dy, -i[0] + center[0] + dx, i[2]])\n            cboard.data.splice(idx, 1)\n        }\n    })\n    return cboard\n}\n\n// Return the length of the longest line\nconst getWidth = (lines) => {\n    let width = 0\n    lines.forEach(line => {\n        width = Math.max(width, line.length)\n    })\n    return width\n}\n\n// buffer around input file (top, bottom, left and right)\nconst getLayoutFromLines = (lines) => {\n    const width = getWidth(lines)\n\n    const layout = []\n    layout.push(' '.repeat(width + 2).split(''))\n    lines.forEach(line => {\n        layout.push((' ' + line + ' '.repeat(width - line.length) + ' ').split(''))\n    });\n    layout.push(' '.repeat(width + 2).split(''))\n    return layout\n}\n\n// export const test = (setInput) => {\n// fetch(myTextFile)\n//     .then((r) => r.text())\n//     .then(text => {\n//         setInput(text)\n//         // console.log(text);\n//     })\n// }\n\nexport const getBoard = async (name) => {\n    const boards = {\n        'checkerboard': checkerboard,\n        'IQ_creator': IQ_creator,\n        'lucky13': lucky13,\n        'new': new_board,\n        'pentominoes3x20': pentominoes3x20,\n        'pentominoes4x15': pentominoes4x15,\n        'pentominoes5x12': pentominoes5x12,\n        'pentominoes6x10': pentominoes6x10,\n        'pentominoes8x8_middle_missing': pentominoes8x8_middle_missing,\n        'test1': test1,\n        'test2': test2,\n        'thirteen_holes': thirteen_holes,\n        'trivial': trivial,\n        'trivial2': trivial2\n    }\n    const res = await fetch(boards[name])\n    const board = await res.text()\n    return board\n}\n\n\n\nexport const solve = (input, allowReflections = false) => {\n\n    const lines = input.split('\\n')\n    for (let i = 0; i < lines.length; ++i) {\n        lines[i] = lines[i].replace('\\r', '')\n    }\n    // const width = getWidth(lines)\n    const layout = getLayoutFromLines(lines)\n    console.log(layout)\n    // Area of largest piece\n    let boardSize = 0\n    const bag = []\n    for (let i = 0; i < layout.length; ++i) {\n        for (let j = 0; j < layout[i].length; ++j) {\n            if (layout[i][j] != \" \") {\n                const a = new Piece(layout[i][j])\n                a.buildPiece(i, j, 0, 0, layout)\n                a.symmetry = testSym(a)\n                if (allowReflections) {\n                    a.reflect = testRef(a)\n                }\n                bag.push(a)\n                if (a.size > boardSize) {\n                    boardSize = a.size\n                }\n            }\n        }\n    }\n    let board\n    // Remove the board from bag\n    for (let i = 0; i < bag.length; ++i) {\n        if (bag[i].size == boardSize) {\n            board = bag[i]\n            bag.splice(i, 1)\n            break\n        }\n    }\n\n    for (let x = 0; x < bag.length; ++x) {//fix one piece with no symmetries if the board is symmetrical/semisymmetrical\n        const i = bag[x]\n        if (i.reflect == 2 && i.symmetry == 4) {\n            i.symmetry = board.symmetry\n            i.reflect = board.reflect\n            break\n        }\n        if (allowReflections == 0 && i.symmetry == 4) {\n            i.symmetry = board.symmetry\n            break\n        }\n    }\n\n    let sameSize = bag[0].size\n    for (let i = 0; i < bag.length; ++i) {\n        if (bag[i].size != sameSize) {\n            sameSize = 0\n            break\n        }\n    }\n    sizeCheck(bag, boardSize)\n\n    const solutions = []\n    const used = []\n    const bfirst = [[bag, used, [board]]]\n    console.log('board')\n    console.log(board)\n    while (bfirst.length > 0) {\n        boardFirstSolve(bfirst, solutions, sameSize)\n        if (solutions.length > 0) {\n            break\n        }\n    }\n    console.log('bfirst')\n    console.log(bfirst)\n    console.log('solutions')\n    console.log(solutions)\n    const [height, width] = board.getHeightWith()\n    console.log('grid')\n    console.log(solutionToGrid(solutions[0], height, width))\n    return solutions.map(solution => solutionToGrid(solution, height, width))\n}\n\nconst getRandomColor = () => {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nconst solutionToGrid = (solution, height, width) => {\n    const grid = []\n    for (let i = 0; i < height; ++i) {\n        grid.push([])\n    }\n    for (let i = 0; i < solution.length; ++i) {\n        const [piece, y, x, ori, ref] = solution[i]\n        const mult = 1 - 2 * ref\n        for (const square of piece.data) {\n            const [dy, dx, char] = square\n            switch (ori) {\n                case 0:\n                    grid[y + dy][x + mult * dx] = colors[i]\n                    break;\n                case 1:\n                    grid[y - mult * dx][x + dy] = colors[i]\n                    break\n                case 2:\n                    grid[y - dy][x - mult * dx] = colors[i]\n                    break\n                case 3:\n                    grid[y + mult * dx][x - dy] = colors[i]\n                    break;\n                default:\n                    break;\n            }\n        }\n\n    }\n    return grid\n}","import React from 'react'\nimport Button from '@material-ui/core/Button'\nconst ImportFromFileBodyComponent = ({ setInput }) => {\n    let fileReader;\n\n    const handleFileRead = (e) => {\n        const content = fileReader.result;\n        console.log(content);\n        setInput(content)\n        // … do something with the 'content' …\n    };\n\n    const handleFileChosen = (file) => {\n        fileReader = new FileReader();\n        fileReader.onloadend = handleFileRead;\n        fileReader.readAsText(file);\n    };\n\n    return <div className='upload-expense'>\n        <Button variant=\"contained\" component=\"label\">\n            Select File\n            <input type='file'\n                id='file'\n                className='input-file'\n                style={{ display: \"none\" }}\n                // accept='.csv'\n                onChange={e => handleFileChosen(e.target.files[0])}\n            />\n        </Button>\n\n    </div>;\n};\n\nexport default ImportFromFileBodyComponent","import React from 'react'\r\nimport './Square.css'\r\n\r\nconst Square = ({ color }) => {\r\n    return (\r\n        <div className=\"square\" style={{ backgroundColor: color }}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div class=\"spinner\">\r\n            <div class=\"double-bounce1\"></div>\r\n            <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState } from 'react'\nimport { solve, getBoard } from '../../solver/solver'\nimport ImportFromFileBodyComponent from '../fileReader/ImportFromFileBodyComponent'\nimport Square from './square/Square'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Spinner from '../layout/Spinner/Spinner'\nimport './Solver.css'\n\nexport const Solver = () => {\n    const [input, setInput] = useState('')\n    const [solutions, setSolutions] = useState([])\n    const [grid, setGrid] = useState([[]])\n    const [solving, setSolving] = useState(false)\n    const boards = [\n        'checkerboard',\n        'IQ_creator',\n        'lucky13',\n        'new',\n        'pentominoes3x20',\n        'pentominoes4x15',\n        'pentominoes5x12',\n        'pentominoes6x10',\n        'pentominoes8x8_middle_missing',\n        // 'test1',\n        // 'test2',\n        'thirteen_holes',\n        'trivial',\n        'trivial2']\n\n    const getSolutions = () => {\n        setSolving(true)\n        const s = solve(input)\n        console.log(s)\n        setSolutions(s)\n        console.log(solutions)\n        setGrid(s[0])\n        setSolving(false)\n    }\n\n    const loadDefaultBoards = async name => {\n        console.log(name)\n        const board = await getBoard(name)\n        console.log(board)\n        setInput(board)\n        setGrid([[]])\n    }\n    return (\n        <Container maxWidth=\"md\" style={{ paddingBottom: '10px' }}>\n\n            <h1>Tiling Puzzle Solver</h1>\n            <p>Select a default board or an input file. Larger boards may take longer to solve.</p>\n            <h2>default maps</h2>\n            {boards.map(name => <Box m={0.2} clone>\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => loadDefaultBoards(name)} >{name}</Button>\n            </Box>)}\n\n            <h2>Load Board</h2>\n            <ImportFromFileBodyComponent setInput={setInput} />\n\n            <Button style={{ marginTop: '8px' }} variant=\"contained\" color=\"primary\" m={100} onClick={getSolutions}>Solve</Button>\n\n            <h2>Input</h2>\n            <div className=\"display-linebreak\">\n                {input}\n            </div>\n            <h2>Solution</h2>\n            {solving === true ? <Spinner></Spinner> : null}\n            <div style={{ width: String(25 * grid[0].length) + 'px' }}>\n                {grid.map((row, rowIdx) => {\n                    return row.map((square, squareIdx) => {\n                        return (\n                            <Square color={square} />\n                        )\n                    })\n\n                })}\n            </div>\n\n        </Container>\n    )\n}\n\nexport default Solver","import React from 'react';\nimport './App.css';\nimport Solver from './components/solver/Solver'\nimport AppBar from '@material-ui/core/AppBar'\n\nfunction App() {\n  return (\n    <>\n      <AppBar position=\"static\">\n        <h1 style={{ marginLeft: '25px' }}>Tiling Puzzle Solver</h1>\n      </AppBar>\n      <Solver />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'typeface-roboto'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}